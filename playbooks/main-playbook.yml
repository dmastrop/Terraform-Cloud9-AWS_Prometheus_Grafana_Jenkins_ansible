---
#- name: Install Grafana
- name: Bootstrap Main EC2 Node
  #hosts: hosts
  # what we want to run the playbook on. This is a local test
  hosts: main
  # integrating ansible with terraform requires hosts main. Also changed aws_hosts file from 
  # [hosts] group to [main] grouping.
  # With this change the aws_hosts file will be specified as custom inventory file everytime we run grafana.
  become: yes
  # we must be root to run apt
  
  tasks:
  # Grafana installation
  # we will use the main-userdata.tpl file to scaffold this (the -names below). See below
    
    - name: Download apt key
    # download the apt key
    # see this documentation: apt_module
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_module.html
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_key_module.html
    # we will not need wget as in here: wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add - &&
    # we can use a url. See documentation above
      ansible.builtin.apt_key:
      # note the syntax here: ansible.builtin.apt_key   That is an underscore on the last apt_key
        url: https://packages.grafana.com/gpg.key
        state: present
    
    
    - name: Add grafana repo to sources.list
    # add grafana to the sources.list
    # echo "deb https://packages.grafana.com/oss/deb stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list &&
    # we have apt respository module for this, apt_repository_module
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_repository_module.html
      #filename will set the name of the source list file in sources.list.d. Defaults to a file name based on the repository source url. The .list extension will be automatically added.
      #repo is a source string for the repository.
      ansible.builtin.apt_repository:
        repo: deb https://packages.grafana.com/oss/deb stable main
        filename: grafana
        # this automatically appends the .list to this file
        state: present
    
   
    - name: Update apt cache and intall Grafana
    # sudo apt-get -y update &&
    # sudo apt-get -y install grafana &&
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_module.html
      #update_cache runs the equivalent of apt-get update before the operation. Can be run as part of the package installation or as a separate step
      # default is to not update the cache
      ansible.builtin.apt:
        name: grafana
        # this is the name of the application
        update_cache: yes
        
    
    
    - name: Ensure Grafana is started and enabled.
    # sudo systemctl start grafana-server &&
    # sudo systemctl enable grafana-server.service
    # we have a ansible.builtin.systemd_service module
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/systemd_service_module.html
      #enabled is whether the unit should start on boot. At least one of state and enabled are required.
      #state is started/stooped will not run unless they need to be run and will not run on themselves.
      #ansible will always start grafana-service.  Can even use it to start if granfana-service crashes.
        #restarted will always bounce the unit. Reloaded will always reload....
      ansible.builtin.systemd:
        name: grafana-server
        #note that the service is grafana-service and not grafana.  Grafana is the application name.
        state: started
        enabled: yes
        
    # Prometheus installation
    # Use teh PrometheusInstallNotes.txt to scaffold this.
    
    #- name: Download Prometheus
    #- name: Extract Prometheus Resources using tar file
    #- name: Create a Prometheus Group
    #- name: Create a Prometheus User
    #- name: Create Prometheus Directories using a loop
    #- name: Setting Permissions on some of the Directories
    #- name: Copy Files to /usr/local/bin 
    #- name: Copy Files to /etc/prometheus
    #- name: Create Config File /etc/prometheus/prometheus.yml
    #- name: Create a Systemd File /etc/systemd/system/prometheus.service
    #- name: Ensure Prometheus is Started systemctl start and enable
    
    